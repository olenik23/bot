import telebot
from random import *
photo1 = ['https://cantatas.ru/wp-content/uploads/2018/09/378925-1-1280x720.jpg','https://gagadget.com/media/cache/dd/55/dd55d2353ca7d1a8b9bc0e9fe0b53f9d.jpg']
stic = ['https://i.ibb.co/wpTygLc/787758841025527842.webp','https://i.ibb.co/cQjhQ2L/570680894554961.webp','https://i.ibb.co/wgx9G37/895522946326462546.webp','https://i.ibb.co/gZmyGsW/2290355374324187139.webp','https://i.ibb.co/jyXQQ1F/5226544950883127343.webp','https://i.ibb.co/9hVx4KJ/2540809228184982739.webp']
data = {}
print(data)
TOKEN = '5467170827:AAG08OPkOiGEglavwIZAcndfz1RMg2Q5XNI'
bot = telebot.TeleBot(TOKEN)
markup = telebot.types.InlineKeyboardMarkup()
button_echo = telebot.types.InlineKeyboardButton('Эхо-бот',callback_data='echo')
btn_calc = telebot.types.InlineKeyboardButton('Калькулятор',callback_data='calc')
btn_cube = telebot.types.InlineKeyboardButton('Кубик',callback_data='cube')
btn_photo = telebot.types.InlineKeyboardButton('ФОТО',callback_data='photo')
btn_sticker = telebot.types.InlineKeyboardButton('Рандом стикер',callback_data='stiker')
markup.add(button_echo)
markup.add(btn_calc)
markup.add(btn_cube)
markup.add(btn_photo)
markup.add(btn_sticker)
cancel_markup = telebot.types.InlineKeyboardMarkup()
cancel_btn = telebot.types.InlineKeyboardButton('Назад',callback_data='back')
cancel_markup.add(cancel_btn)
cube_more_mrk = telebot.types.InlineKeyboardMarkup()
cube_btn = telebot.types.InlineKeyboardButton('ещё',callback_data='cube1')
cube_more_mrk.add(cube_btn)
cube_more_mrk.add(cancel_btn)

def filter_state(message):
    if message.chat.id in data:
        return True
    else:
        data[message.chat.id] = {"state" : "menu"}

def filter_echo(message):
    return filter_state(message) and data[message.chat.id]['state'] == 'echo'
    

def filter_calc(message):

    return filter_state(message) and  data[message.chat.id]['state'] == 'calc'

@bot.message_handler(commands=['start'])
def start_message(message):
    data[message.chat.id]  = {'state':'start'}
    print(data)
    markup = telebot.types.InlineKeyboardMarkup()
    button_echo = telebot.types.InlineKeyboardButton('Эхо-бот',callback_data='echo')
    btn_calc = telebot.types.InlineKeyboardButton('Калькулятор',callback_data='calc')
    btn_cube = telebot.types.InlineKeyboardButton('Кубик',callback_data='cube')
    markup.add(button_echo)
    markup.add(btn_calc)
    markup.add(btn_cube)
    bot.send_message(message.chat.id,message.from_user.first_name + ' нажми на кнопку',reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def commands(call):

    bot.answer_callback_query(call.id)
    
    if not call.message.chat.id in data:
        data[call.message.chat.id] = {'state':'menu'}
       
    if call.data == 'echo':
        bot.send_message(call.message.chat.id, 'Напиши что-то')
        data[call.message.chat.id]['state'] = 'echo'
        print(data)
       
    if call.data == 'calc':
        bot.send_message(call.message.chat.id, 'Напиши пример')
        data[call.message.chat.id]['state'] = 'calc'
        
        print(data)
    if call.data == 'cube':
        bot.send_dice(call.message.chat.id,reply_markup=cube_more_mrk)
        data[call.message.chat.id]['state'] = 'cube'
    if call.data == 'cube1':
        bot.send_dice(call.message.chat.id,reply_markup=cube_more_mrk)
        if call.message.chat.id in data:

            data[call.message.chat.id]['state'] = 'cube1'  
        else:
            data[call.message.chat.id] = {'state':'cube1'}
    if call.data == 'back':
        bot.send_message(call.message.chat.id,"Menu",reply_markup=markup)
        data[call.message.chat.id]['state'] = 'menu'
    if call.data == 'photo':
        abb = randint(0,len(photo1)-1)
        bot.send_photo(call.message.chat.id,photo=photo1[abb],reply_markup=cancel_markup)
        data[call.message.chat.id]['state'] = 'photo'
    if call.data == 'stiker':
        bub = randint(0,len(stic)-1)
        bot.send_sticker(call.message.chat.id,sticker=stic[bub],reply_markup=cancel_markup)
        data[call.message.chat.id]['state'] = 'stiker'
       
bot.send_game()

@bot.message_handler(func=filter_calc)  
def calculator(message):
    try:
        result = eval(message.text.replace('^','**'))
        print(result)
        bot.send_message(message.chat.id,'Ответ'+ str(result),reply_markup=cancel_markup)
    except ZeroDivisionError:
        bot.send_message(message.chat.id,'Ошибка нельзя делить на ноль!',reply_markup=cancel_markup)
    except:
        bot.send_message(message.chat.id,'Если я не ришу то ти не вирнешся в меню',)



@bot.message_handler(func=filter_echo)
def echo_message(message):
    answer = message.text
    bot.reply_to(message,answer ,reply_markup=cancel_markup)

bot.polling(none_stop=True)
bot.send_sticker()
